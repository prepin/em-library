definitions:
  entities.LyricsVerseData:
    properties:
      content:
        type: string
      index:
        type: integer
    type: object
  entities.SongData:
    properties:
      group:
        type: string
      id:
        type: integer
      link:
        type: string
      release_date:
        type: string
      song:
        type: string
    type: object
  handlers.CreateSongParams:
    properties:
      group:
        minLength: 1
        type: string
      song:
        minLength: 1
        type: string
    required:
    - group
    - song
    type: object
  handlers.ErrorResponse:
    properties:
      errors:
        type: string
    type: object
  handlers.PatchSongParams:
    properties:
      group:
        minLength: 1
        type: string
      link:
        minLength: 1
        type: string
      lyrics:
        minLength: 1
        type: string
      release_date:
        type: string
      song:
        minLength: 1
        type: string
    type: object
info:
  contact: {}
paths:
  /song:
    post:
      consumes:
      - application/json
      description: Создает новую песню с указанными данными
      parameters:
      - description: Данные песни
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateSongParams'
      produces:
      - application/json
      responses:
        "201":
          description: Данные созданной песни
          schema:
            $ref: '#/definitions/entities.SongData'
        "400":
          description: Неверный формат запроса
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "409":
          description: Песня уже существует
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "502":
          description: Ошибка внешнего сервиса
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Создание новой песни
      tags:
      - songs
  /song/{id}:
    delete:
      description: Удаляет песню по указанному ID
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: Песня успешно удалена
        "400":
          description: Неверный формат ID
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Удаление песни
      tags:
      - songs
    patch:
      consumes:
      - application/json
      description: Обновляет информацию о песне по указанному ID
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      - description: Обновляемые данные песни
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/handlers.PatchSongParams'
      responses:
        "204":
          description: Песня успешно обновлена
        "400":
          description: Неверный формат запроса или ID
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Песня не найдена
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Обновление данных песни
      tags:
      - songs
  /song/{id}/lyrics:
    get:
      consumes:
      - application/json
      description: Получить куплеты песни по ID песни с возможностью пагинации
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      - description: С какого куплета начать
        in: query
        name: offset
        type: integer
      - description: Сколько куплетов вывести для пагинации
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Текст песни успешно получен
          schema:
            items:
              $ref: '#/definitions/entities.LyricsVerseData'
            type: array
        "400":
          description: Неверный запрос
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Текст песни не найден
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Получить текст песни
      tags:
      - lyrics
  /songs:
    get:
      description: Возвращает список песен с возможностью фильтрации
      parameters:
      - description: ID песни
        in: query
        name: id
        type: integer
      - description: Название группы
        in: query
        name: group
        type: string
      - description: Название песни
        in: query
        name: song
        type: string
      - description: 'Дата релиза от (формат: 2006-01-02)'
        in: query
        name: release_date_from
        type: string
      - description: 'Дата релиза до (формат: 2006-01-02)'
        in: query
        name: release_date_to
        type: string
      - description: С какой песни выводить
        in: query
        name: offset
        type: integer
      - description: Сколько песен выводить
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Список песен
          schema:
            items:
              $ref: '#/definitions/entities.SongData'
            type: array
        "400":
          description: Неверный формат запроса
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Песни не найдены
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Получение списка песен
      tags:
      - songs
swagger: "2.0"
